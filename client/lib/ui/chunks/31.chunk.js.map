{"version":3,"sources":["webpack:///./src/ui/node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/Grid/types.js","webpack:///./src/ui/node_modules/@babel/runtime/helpers/interopRequireWildcard.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/Grid/defaultCellRangeRenderer.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/List/types.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/CellMeasurer/types.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/List/index.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/List/List.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/Grid/index.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/Grid/Grid.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/Grid/utils/maxElementSize.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/utils/createCallbackMemoizer.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/Grid/utils/updateScrollIndexHelper.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/utils/requestAnimationTimeout.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/utils/animationFrame.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/CellMeasurer/index.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer.js","webpack:///./src/ui/node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache.js","webpack:///./src/ui/node_modules/lodash.debounce/index.js"],"names":["module","exports","e","__esModule","_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","value","bpfrpt_proptype_VisibleCellRange","bpfrpt_proptype_Alignment","bpfrpt_proptype_OverscanIndicesGetter","bpfrpt_proptype_OverscanIndices","bpfrpt_proptype_OverscanIndicesGetterParams","bpfrpt_proptype_RenderedSection","bpfrpt_proptype_ScrollbarPresenceChange","bpfrpt_proptype_Scroll","bpfrpt_proptype_NoContentRenderer","bpfrpt_proptype_CellSize","bpfrpt_proptype_CellSizeGetter","bpfrpt_proptype_CellRangeRenderer","bpfrpt_proptype_CellRangeRendererParams","bpfrpt_proptype_StyleCache","bpfrpt_proptype_CellCache","bpfrpt_proptype_CellRenderer","bpfrpt_proptype_CellRendererParams","bpfrpt_proptype_CellPosition","_typeof","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_objectWithoutProperties2","_classCallCheck2","_createClass2","_defineProperty2","_CellSizeAndPositionManager","_maxElementSize","ScalingCellSizeAndPositionManager","_ref","_ref$maxScrollSize","maxScrollSize","getMaxElementSize","params","this","_cellSizeAndPositionManager","_maxScrollSize","key","getTotalSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","_ref2","containerSize","offset","totalSize","safeTotalSize","offsetPercentage","_getOffsetPercentage","Math","round","index","getSizeAndPositionOfCell","getSizeAndPositionOfLastMeasuredCell","min","_ref3","_ref3$align","align","currentOffset","targetIndex","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","cellCount","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanStartIndex","max","overscanStopIndex","SCROLL_DIRECTION_VERTICAL","SCROLL_DIRECTION_HORIZONTAL","SCROLL_DIRECTION_FORWARD","SCROLL_DIRECTION_BACKWARD","cellCache","cellRenderer","columnSizeAndPositionManager","columnStartIndex","columnStopIndex","deferredMeasurementCache","horizontalOffsetAdjustment","isScrolling","isScrollingOptOut","parent","rowSizeAndPositionManager","rowStartIndex","rowStopIndex","styleCache","verticalOffsetAdjustment","visibleColumnIndices","visibleRowIndices","renderedCells","areOffsetsAdjusted","canCacheStyle","rowIndex","rowDatum","columnIndex","columnDatum","isVisible","start","stop","concat","style","height","left","position","top","width","size","cellRendererParams","renderedCell","push","bpfrpt_proptype_RenderedRows","bpfrpt_proptype_RowRenderer","bpfrpt_proptype_RowRendererParams","bpfrpt_proptype_CellMeasureCache","enumerable","_List","_types","_class","_temp","_extends2","_possibleConstructorReturn2","_getPrototypeOf3","_assertThisInitialized2","_inherits2","_Grid","React","_clsx","List","_React$PureComponent","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","apply","rowRenderer","props","widthDescriptor","writable","ref","Grid","clientHeight","scrollHeight","scrollTop","onScroll","rowOverscanStartIndex","rowOverscanStopIndex","onRowsRendered","forceUpdate","alignment","getOffsetForCell","invalidateCellSizeAfterRender","measureAllCells","undefined","_ref6$columnIndex","_ref6$rowIndex","recomputeGridSize","scrollToPosition","scrollToCell","_this$props","className","noRowsRenderer","scrollToIndex","classNames","createElement","autoContainerWidth","_cellRenderer","columnWidth","columnCount","noContentRenderer","_onScroll","onSectionRendered","_onSectionRendered","_setRef","scrollToRow","PureComponent","autoHeight","estimatedRowSize","overscanIndicesGetter","accessibilityOverscanIndicesGetter","overscanRowCount","scrollToAlignment","_accessibilityOverscanIndicesGetter","_defaultCellRangeRenderer","_defaultOverscanIndicesGetter","DEFAULT_SCROLLING_RESET_TIME_INTERVAL","_calculateSizeAndPositionDataAndUpdateScrollOffset","_ScalingCellSizeAndPositionManager","_createCallbackMemoizer","_updateScrollIndexHelper","_scrollbarSize","_reactLifecyclesCompat","_requestAnimationTimeout","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","_objectSpread","target","source","forEach","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","_disablePointerEventsTimeoutId","setState","needToResetStyleCache","_onGridRenderedMemoizer","callback","indices","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","_renderedColumnStartIndex","_renderedColumnStopIndex","_rowStartIndex","_rowStopIndex","_renderedRowStartIndex","_renderedRowStopIndex","_scrollingContainer","event","handleScrollEvent","cellSizeGetter","_wrapSizeGetter","estimatedCellSize","_getEstimatedColumnSize","rowCount","rowHeight","_getEstimatedRowSize","state","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollbarSize","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","_ref$columnIndex","_ref$rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","sizeJustIncreasedFromZero","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","updateScrollIndexCallback","cancelAnimationTimeout","_this$props6","containerProps","containerRole","containerStyle","id","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","maxWidth","maxHeight","overflow","pointerEvents","cellRangeRenderer","overscanColumnCount","getOffsetAdjustment","overscanColumnIndices","overscanRowIndices","hasFixedHeight","hasFixedWidth","scrollingResetTimeInterval","requestAnimationTimeout","_debounceScrollEndedCallback","_this3","_onScrollMemoizer","_this3$props","clientWidth","scrollWidth","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","nextProps","assign","maybeStateA","maybeStateB","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","updateScrollOffsetForScrollToIndex","estimatedColumnSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","polyfill","_default","CellSizeAndPositionManager","_cellSizeGetter","_cellCount","_estimatedCellSize","_lastMeasuredIndex","Error","lastMeasuredCellSizeAndPosition","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","idealOffset","datum","maxOffset","minOffset","_findNearestCell","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","window","chrome","requireAllKeys","cachedIndices","allInitialized","every","isArray","indexChanged","some","cachedValue","join","hasScrollToIndex","sizeHasChanged","bpfrpt_proptype_AnimationTimeoutId","_animationFrame","frame","caf","delay","Promise","resolve","then","Date","now","raf","timeout","win","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","_CellMeasurer","_CellMeasurerCache","_reactDom","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","element","Element","console","warn","_child","_maybeMeasureCell","children","measure","_measure","registerChild","_registerChild","node","findDOMNode","ownerDocument","defaultView","HTMLElement","styleWidth","styleHeight","ceil","offsetHeight","offsetWidth","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","DEFAULT_WIDTH","DEFAULT_HEIGHT","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","defaultHeight","defaultWidth","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","_i","rowKey","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","global","freeSelf","root","Function","objectToString","prototype","toString","nativeMax","nativeMin","isObject","type","toNumber","isObjectLike","isSymbol","other","valueOf","replace","isBinary","test","slice","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","thisArg","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","remainingWait","debounced","isInvoking","flush"],"mappings":"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","file":"chunks/31.chunk.js","sourcesContent":["function _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    \"default\": e\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_VisibleCellRange = exports.bpfrpt_proptype_Alignment = exports.bpfrpt_proptype_OverscanIndicesGetter = exports.bpfrpt_proptype_OverscanIndices = exports.bpfrpt_proptype_OverscanIndicesGetterParams = exports.bpfrpt_proptype_RenderedSection = exports.bpfrpt_proptype_ScrollbarPresenceChange = exports.bpfrpt_proptype_Scroll = exports.bpfrpt_proptype_NoContentRenderer = exports.bpfrpt_proptype_CellSize = exports.bpfrpt_proptype_CellSizeGetter = exports.bpfrpt_proptype_CellRangeRenderer = exports.bpfrpt_proptype_CellRangeRendererParams = exports.bpfrpt_proptype_StyleCache = exports.bpfrpt_proptype_CellCache = exports.bpfrpt_proptype_CellRenderer = exports.bpfrpt_proptype_CellRendererParams = exports.bpfrpt_proptype_CellPosition = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_CellPosition = bpfrpt_proptype_CellPosition;\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isVisible\": _propTypes[\"default\"].bool.isRequired,\n  \"key\": _propTypes[\"default\"].string.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired,\n  \"style\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRendererParams = bpfrpt_proptype_CellRendererParams;\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRenderer = bpfrpt_proptype_CellRenderer;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired);\nexports.bpfrpt_proptype_CellCache = bpfrpt_proptype_CellCache;\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired);\nexports.bpfrpt_proptype_StyleCache = bpfrpt_proptype_StyleCache;\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired).isRequired,\n  \"cellRenderer\": _propTypes[\"default\"].func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n  \"horizontalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"styleCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"visibleColumnIndices\": _propTypes[\"default\"].object.isRequired,\n  \"visibleRowIndices\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRangeRendererParams = bpfrpt_proptype_CellRangeRendererParams;\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRangeRenderer = bpfrpt_proptype_CellRangeRenderer;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellSizeGetter = bpfrpt_proptype_CellSizeGetter;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].number]);\nexports.bpfrpt_proptype_CellSize = bpfrpt_proptype_CellSize;\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_NoContentRenderer = bpfrpt_proptype_NoContentRenderer;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": _propTypes[\"default\"].number.isRequired,\n  \"clientWidth\": _propTypes[\"default\"].number.isRequired,\n  \"scrollHeight\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"scrollWidth\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_Scroll = bpfrpt_proptype_Scroll;\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": _propTypes[\"default\"].bool.isRequired,\n  \"vertical\": _propTypes[\"default\"].bool.isRequired,\n  \"size\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_ScrollbarPresenceChange = bpfrpt_proptype_ScrollbarPresenceChange;\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_RenderedSection = bpfrpt_proptype_RenderedSection;\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": _propTypes[\"default\"].oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": _propTypes[\"default\"].oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": _propTypes[\"default\"].number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": _propTypes[\"default\"].number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": _propTypes[\"default\"].number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndicesGetterParams = bpfrpt_proptype_OverscanIndicesGetterParams;\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"overscanStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndices = bpfrpt_proptype_OverscanIndices;\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_OverscanIndicesGetter = bpfrpt_proptype_OverscanIndicesGetter;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nexports.bpfrpt_proptype_Alignment = bpfrpt_proptype_Alignment;\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": _propTypes[\"default\"].number,\n  \"stop\": _propTypes[\"default\"].number\n};\nexports.bpfrpt_proptype_VisibleCellRange = bpfrpt_proptype_VisibleCellRange;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _getRequireWildcardCache(e) {\n  if (\"function\" != typeof WeakMap) return null;\n  var r = new WeakMap(),\n    t = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {\n    return e ? t : r;\n  })(e);\n}\nfunction _interopRequireWildcard(e, r) {\n  if (!r && e && e.__esModule) return e;\n  if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return {\n    \"default\": e\n  };\n  var t = _getRequireWildcardCache(r);\n  if (t && t.has(e)) return t.get(e);\n  var n = {\n      __proto__: null\n    },\n    a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n  }\n  return n[\"default\"] = e, t && t.set(e, n), n;\n}\nmodule.exports = _interopRequireWildcard, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _CellSizeAndPositionManager = _interopRequireDefault(require(\"./CellSizeAndPositionManager\"));\n\nvar _maxElementSize = require(\"./maxElementSize.js\");\n\nvar _types = require(\"../types\");\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? (0, _maxElementSize.getMaxElementSize)() : _ref$maxScrollSize,\n        params = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"maxScrollSize\"]);\n    (0, _classCallCheck2[\"default\"])(this, ScalingCellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionManager\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_maxScrollSize\", void 0);\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new _CellSizeAndPositionManager[\"default\"](params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  (0, _createClass2[\"default\"])(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = ScalingCellSizeAndPositionManager;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultCellRangeRenderer;\n\nvar _types = require(\"./types\");\n\n/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nfunction defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_Scroll = exports.bpfrpt_proptype_RenderedRows = exports.bpfrpt_proptype_RowRenderer = exports.bpfrpt_proptype_RowRendererParams = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_RowRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isVisible\": _propTypes[\"default\"].bool.isRequired,\n  \"key\": _propTypes[\"default\"].string.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"style\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_RowRendererParams = bpfrpt_proptype_RowRendererParams;\nvar bpfrpt_proptype_RowRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_RowRenderer = bpfrpt_proptype_RowRenderer;\nvar bpfrpt_proptype_RenderedRows = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"overscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"startIndex\": _propTypes[\"default\"].number.isRequired,\n  \"stopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_RenderedRows = bpfrpt_proptype_RenderedRows;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": _propTypes[\"default\"].number.isRequired,\n  \"scrollHeight\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_Scroll = bpfrpt_proptype_Scroll;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_CellMeasureCache = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_CellMeasureCache = process.env.NODE_ENV === 'production' ? null : {\n  \"hasFixedWidth\": _propTypes[\"default\"].func.isRequired,\n  \"hasFixedHeight\": _propTypes[\"default\"].func.isRequired,\n  \"has\": _propTypes[\"default\"].func.isRequired,\n  \"set\": _propTypes[\"default\"].func.isRequired,\n  \"getHeight\": _propTypes[\"default\"].func.isRequired,\n  \"getWidth\": _propTypes[\"default\"].func.isRequired\n};\nexports.bpfrpt_proptype_CellMeasureCache = bpfrpt_proptype_CellMeasureCache;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _List[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"List\", {\n  enumerable: true,\n  get: function get() {\n    return _List[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_RowRendererParams\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_RowRendererParams;\n  }\n});\n\nvar _List = _interopRequireDefault(require(\"./List\"));\n\nvar _types = require(\"./types\");","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _Grid = _interopRequireWildcard(require(\"../Grid\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"Grid\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = (0, _clsx[\"default\"])('ReactVirtualized__List', className);\n      return React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n  return List;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": _propTypes[\"default\"].string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": _propTypes[\"default\"].string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": _propTypes[\"default\"].number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof _Grid.bpfrpt_proptype_NoContentRenderer === \"function\" ? _Grid.bpfrpt_proptype_NoContentRenderer.isRequired ? _Grid.bpfrpt_proptype_NoContentRenderer.isRequired : _Grid.bpfrpt_proptype_NoContentRenderer : _propTypes[\"default\"].shape(_Grid.bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": _propTypes[\"default\"].func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof _Grid.bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? _Grid.bpfrpt_proptype_OverscanIndicesGetter.isRequired ? _Grid.bpfrpt_proptype_OverscanIndicesGetter.isRequired : _Grid.bpfrpt_proptype_OverscanIndicesGetter : _propTypes[\"default\"].shape(_Grid.bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof _Grid.bpfrpt_proptype_CellSize === \"function\" ? _Grid.bpfrpt_proptype_CellSize.isRequired ? _Grid.bpfrpt_proptype_CellSize.isRequired : _Grid.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_Grid.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof _types.bpfrpt_proptype_RowRenderer === \"function\" ? _types.bpfrpt_proptype_RowRenderer.isRequired ? _types.bpfrpt_proptype_RowRenderer.isRequired : _types.bpfrpt_proptype_RowRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof _Grid.bpfrpt_proptype_Alignment === \"function\" ? _Grid.bpfrpt_proptype_Alignment.isRequired ? _Grid.bpfrpt_proptype_Alignment.isRequired : _Grid.bpfrpt_proptype_Alignment : _propTypes[\"default\"].shape(_Grid.bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": _propTypes[\"default\"].number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": _propTypes[\"default\"].number,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": _propTypes[\"default\"].number,\n\n  /** Width of list */\n  \"width\": _propTypes[\"default\"].number.isRequired\n}), _temp);\nexports[\"default\"] = List;\n(0, _defineProperty2[\"default\"])(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: _Grid.accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Grid\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"accessibilityOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _accessibilityOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultCellRangeRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultCellRangeRenderer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_NoContentRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_NoContentRenderer;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Alignment\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Alignment;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellPosition\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellPosition;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellSize\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellSize;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_OverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_OverscanIndicesGetter;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_RenderedSection\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_RenderedSection;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellRendererParams\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellRendererParams;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Scroll\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Scroll;\n  }\n});\n\nvar _Grid = _interopRequireDefault(require(\"./Grid\"));\n\nvar _accessibilityOverscanIndicesGetter = _interopRequireDefault(require(\"./accessibilityOverscanIndicesGetter\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireDefault(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _types = require(\"./types\");","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _calculateSizeAndPositionDataAndUpdateScrollOffset = _interopRequireDefault(require(\"./utils/calculateSizeAndPositionDataAndUpdateScrollOffset\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _createCallbackMemoizer = _interopRequireDefault(require(\"../utils/createCallbackMemoizer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireWildcard(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _updateScrollIndexHelper = _interopRequireDefault(require(\"./utils/updateScrollIndexHelper\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _scrollbarSize = _interopRequireDefault(require(\"dom-helpers/scrollbarSize\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _requestAnimationTimeout = require(\"../utils/requestAnimationTimeout\");\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nvar DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nexports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = DEFAULT_SCROLLING_RESET_TIME_INTERVAL;\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Grid);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Grid).call(this, props));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onGridRenderedMemoizer\", (0, _createCallbackMemoizer[\"default\"])());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollMemoizer\", (0, _createCallbackMemoizer[\"default\"])(false));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateColumnIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateRowIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollLeftFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollTopFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_horizontalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_verticalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollbarPresenceChanged\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollingContainer\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_childrenToDisplay\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollTop\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollLeft\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_disablePointerEventsTimeoutId\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_styleCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n    var columnSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  (0, _createClass2[\"default\"])(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", (0, _extends2[\"default\"])({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: (0, _clsx[\"default\"])('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = (0, _requestAnimationTimeout.requestAnimationTimeout)(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n  return Grid;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": _propTypes[\"default\"].string.isRequired,\n  \"aria-readonly\": _propTypes[\"default\"].bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRenderer === \"function\" ? _types.bpfrpt_proptype_CellRenderer.isRequired ? _types.bpfrpt_proptype_CellRenderer.isRequired : _types.bpfrpt_proptype_CellRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRangeRenderer === \"function\" ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired : _types.bpfrpt_proptype_CellRangeRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": _propTypes[\"default\"].string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": _propTypes[\"default\"].object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": _propTypes[\"default\"].string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": _propTypes[\"default\"].object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": _propTypes[\"default\"].number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": _propTypes[\"default\"].func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": _propTypes[\"default\"].string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": _propTypes[\"default\"].bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof _types.bpfrpt_proptype_NoContentRenderer === \"function\" ? _types.bpfrpt_proptype_NoContentRenderer.isRequired ? _types.bpfrpt_proptype_NoContentRenderer.isRequired : _types.bpfrpt_proptype_NoContentRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": _propTypes[\"default\"].func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof _types.bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired : _types.bpfrpt_proptype_OverscanIndicesGetter : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": _propTypes[\"default\"].string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": _propTypes[\"default\"].number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": _propTypes[\"default\"].number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof _types.bpfrpt_proptype_Alignment === \"function\" ? _types.bpfrpt_proptype_Alignment.isRequired ? _types.bpfrpt_proptype_Alignment.isRequired : _types.bpfrpt_proptype_Alignment : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": _propTypes[\"default\"].number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": _propTypes[\"default\"].number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": _propTypes[\"default\"].number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": _propTypes[\"default\"].number.isRequired\n}), _temp);\n(0, _defineProperty2[\"default\"])(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: _defaultCellRangeRenderer[\"default\"],\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: _scrollbarSize[\"default\"],\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: _defaultOverscanIndicesGetter[\"default\"],\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n(0, _reactLifecyclesCompat.polyfill)(Grid);\nvar _default = Grid;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = calculateSizeAndPositionDataAndUpdateScrollOffset;\n\n/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nfunction calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"../types\");\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n    (0, _classCallCheck2[\"default\"])(this, CellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionData\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_lastMeasuredIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_lastBatchedIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_cellCount\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeGetter\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_estimatedCellSize\", void 0);\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  (0, _createClass2[\"default\"])(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n  return CellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = CellSizeAndPositionManager;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMaxElementSize = void 0;\nvar DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nvar getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};\n\nexports.getMaxElementSize = getMaxElementSize;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createCallbackMemoizer;\n\n/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nfunction createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = updateScrollIndexHelper;\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./ScalingCellSizeAndPositionManager.js\"));\n\nvar _types = require(\"../types\");\n\nfunction updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_AnimationTimeoutId = exports.requestAnimationTimeout = exports.cancelAnimationTimeout = void 0;\n\nvar _animationFrame = require(\"./animationFrame\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_AnimationTimeoutId = bpfrpt_proptype_AnimationTimeoutId;\n\nvar cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return (0, _animationFrame.caf)(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\n\nexports.cancelAnimationTimeout = cancelAnimationTimeout;\n\nvar requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = (0, _animationFrame.raf)(timeout);\n    }\n  };\n\n  var frame = {\n    id: (0, _animationFrame.raf)(timeout)\n  };\n  return frame;\n};\n\nexports.requestAnimationTimeout = requestAnimationTimeout;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.caf = exports.raf = void 0;\n// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nvar raf = request;\nexports.raf = raf;\nvar caf = cancel;\nexports.caf = caf;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"CellMeasurer\", {\n  enumerable: true,\n  get: function get() {\n    return _CellMeasurer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"CellMeasurerCache\", {\n  enumerable: true,\n  get: function get() {\n    return _CellMeasurerCache[\"default\"];\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _CellMeasurer = _interopRequireDefault(require(\"./CellMeasurer\"));\n\nvar _CellMeasurerCache = _interopRequireDefault(require(\"./CellMeasurerCache\"));\n\nvar _default = _CellMeasurer[\"default\"];\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_child\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || (0, _reactDom.findDOMNode)(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n  return CellMeasurer;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof _types.bpfrpt_proptype_CellMeasureCache === \"function\" ? _types.bpfrpt_proptype_CellMeasureCache.isRequired ? _types.bpfrpt_proptype_CellMeasureCache.isRequired : _types.bpfrpt_proptype_CellMeasureCache : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].node]).isRequired,\n  \"columnIndex\": _propTypes[\"default\"].number,\n  \"index\": _propTypes[\"default\"].number,\n  \"parent\": _propTypes[\"default\"].shape({\n    invalidateCellSizeAfterRender: _propTypes[\"default\"].func,\n    recomputeGridSize: _propTypes[\"default\"].func\n  }).isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number\n}), _temp); // Used for DEV mode warning check\n\nexports[\"default\"] = CellMeasurer;\n(0, _defineProperty2[\"default\"])(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_WIDTH = exports.DEFAULT_HEIGHT = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"./types\");\n\nvar DEFAULT_HEIGHT = 30;\nexports.DEFAULT_HEIGHT = DEFAULT_HEIGHT;\nvar DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\nexports.DEFAULT_WIDTH = DEFAULT_WIDTH;\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurerCache);\n    (0, _defineProperty2[\"default\"])(this, \"_cellHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_cellWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_columnWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_rowHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_defaultHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_defaultWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_keyMapper\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_columnCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"_rowCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n    (0, _defineProperty2[\"default\"])(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n  return CellMeasurerCache;\n}();\n\nexports[\"default\"] = CellMeasurerCache;\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n"],"sourceRoot":""}